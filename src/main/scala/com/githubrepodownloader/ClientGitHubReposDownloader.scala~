package com.githubrepodownloader

import java.io.File

import akka.actor.{Props, Actor, ActorSystem}
import com.typesafe.config.ConfigFactory
/**
  * Created by ramakrishnas on 19/7/16.
  */
class LocalActor extends Actor{
  @throws[Exception](classOf[Exception])
  override def preStart(): Unit = {
    val remoteActor = context.actorSelection("akka.tcp://GitHubRepoMetadataDownloader@" +
      "127.0.0.1:5150/user/gitHubRepoMetadataDownloader")
    println("That 's remote:" + remoteActor)
    //  remoteActor ! "START"
    //remoteActor ! "START"
   // while(true){

   // }
  }
  override def receive: Receive = {
    case msg => {
      println("got message from remote" + msg)
     remoteActor ! msg
    while(true){

    }
    }
  }
}

object ClientGitHubReposDownloader {
  def main(args: Array[String]) {
     var since = args(0).toInt
     var to = args(1).toInt

    val configFile = getClass.getClassLoader.
      getResource("local_gitHubReposMetadataDownloader.conf").getFile
    val config = ConfigFactory.parseFile(new File(configFile))
    val system = ActorSystem("ClientSystem",config)
    val localActor = system.actorOf(Props[LocalActor], name="local")
    localActor ! since + "," + to
  }
}
